{
	"info": {
		"_postman_id": "1316ffe6-5b0d-42a1-9c12-b14cda301409",
		"name": "Paninti Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login As Superadmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set('superadmin_token', pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"superadmin@email.com\",\n    \"password\": \"validpassword\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/login/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login As Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set('admin_token', pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"storeadmin@email.com\",\n    \"password\": \"validpassword\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/login/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout As Superadmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set('superadmin_token', null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{superadmin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:8000/api/logout/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"logout",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout As Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set('admin_token', null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:8000/api/logout/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"logout",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin CRUD as Superadmin",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/users/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_admin_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Admin\",\n    \"email\": \"newadmin@email.com\",\n    \"password\": \"validpassword\",\n    \"gender\": \"M\",\n    \"phone\": \"02313123\",\n    \"is_superadmin\": false\n}"
						},
						"url": {
							"raw": "localhost:8000/api/users/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Admin\",\n    \"gender\": \"M\",\n    \"phone\": \"1111111\",\n    \"is_superadmin\": false\n}"
						},
						"url": {
							"raw": "localhost:8000/api/users/{{new_admin_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"{{new_admin_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/users/{{new_admin_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"{{new_admin_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{superadmin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Admin CRUD as Admin",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/users/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Admin\",\n    \"email\": \"newadmin2@email.com\",\n    \"password\": \"validpassword\",\n    \"gender\": \"M\",\n    \"phone\": \"02313123\",\n    \"is_superadmin\": false\n}"
						},
						"url": {
							"raw": "localhost:8000/api/users/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Admin\",\n    \"gender\": \"M\",\n    \"phone\": \"1111111\",\n    \"is_superadmin\": false\n}"
						},
						"url": {
							"raw": "localhost:8000/api/users/3/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"3",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/users/3/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"3",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{admin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Store CRUD as Superadmin",
			"item": [
				{
					"name": "Get All Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_store_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Store Ownership",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/owner/users/2/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								"owner",
								"users",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Store Ownership",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/owner/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								"owner",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{superadmin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Store CRUD as Admin",
			"item": [
				{
					"name": "Get All Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 400', () => {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{admin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Store CRUD as Store Owner (Admin)",
			"item": [
				{
					"name": "Create Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seed Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_store_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seed Store Ownership",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/owner/users/2/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								"owner",
								"users",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Owned Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seed Store Again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_store_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Store That Are Not Owned",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Store That Are Not Owned",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{admin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Category CRUD as Superadmin",
			"item": [
				{
					"name": "Get All Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/categories/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_category_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Category\",\n    \"description\": \"New cat description\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/categories/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Category\",\n    \"description\": \"New cat description\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{superadmin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Category CRUD as Admin",
			"item": [
				{
					"name": "Get All Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/categories/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Category\",\n    \"description\": \"New cat description\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/categories/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Category\",\n    \"description\": \"New cat description\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{admin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Product CRUD as Superadmin",
			"item": [
				{
					"name": "Seed Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_category_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Category\",\n    \"description\": \"New cat description\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/categories/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seed Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_store_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_product_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Product\",\n    \"description\": \"Hello\",\n    \"price\": 20000,\n    \"stock\": 10\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/products/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Product\",\n    \"description\": \"Hello\",\n    \"price\": 20000\n}"
						},
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/stock/2/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"stock",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Category To A Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Category From A Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{superadmin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Product CRUD as Admin",
			"item": [
				{
					"name": "Seed Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_category_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Category\",\n    \"description\": \"New cat description\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/categories/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seed Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_store_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seed Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_product_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Product\",\n    \"description\": \"Hello\",\n    \"price\": 20000,\n    \"stock\": 10\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/products/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 400', () => {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Product\",\n    \"description\": \"Hello\",\n    \"price\": 20000,\n    \"stock\": 10\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/products/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Product\",\n    \"description\": \"Hello\",\n    \"price\": 20000\n}"
						},
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/stock/2/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"stock",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Category To A Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Category From A Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 403', () => {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{admin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Product CRUD as Product Owner",
			"item": [
				{
					"name": "Seed Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_category_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Category\",\n    \"description\": \"New cat description\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/categories/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seed Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_store_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Store\",\n    \"contact_number\": \"012313213\",\n    \"description\": \"We are a new store\"\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Seed Store Ownership",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{superadmin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/owner/users/2/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								"owner",
								"users",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set('new_product_id', pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Product\",\n    \"description\": \"Hello\",\n    \"price\": 20000,\n    \"stock\": 10\n}"
						},
						"url": {
							"raw": "localhost:8000/api/stores/{{new_store_id}}/products/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"stores",
								"{{new_store_id}}",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated New Product\",\n    \"description\": \"Hello\",\n    \"price\": 20000\n}"
						},
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product Stock",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/stock/2/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"stock",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Category To A Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Category From A Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/categories/{{new_category_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								"categories",
								"{{new_category_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('status code should be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:8000/api/products/{{new_product_id}}/",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"products",
								"{{new_product_id}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{admin_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}